const express = require('express');
const axios = require('axios');
require('dotenv').config();

const app = express();
const port = 3000;

app.use(express.json());

const winnerBaseUrl = 'https://flex.compusoftgroup.com';
const vectaBaseUrl = process.env.VECTA_BASE_URL;

async function loginVecta() {
  const loginData = {
    account: "10517",
    password: "Aesh7do0",
    username: "it",
    restrictedAccess: true,
  };

  try {
    const response = await axios.post(`${vectaBaseUrl}/auth/login`, loginData, {
      headers: {
        'Content-Type': 'application/json-patch+json',
      },
    });

    return response.data.token; // Assuming the token is returned in this field
  } catch (error) {
    console.error('Error logging in to Vecta:', error.message);
    throw new Error('Failed to log in to Vecta API');
  }
}

async function authenticateVecta() {
  try {
    const token = await loginVecta();
    return token;
  } catch (error) {
    throw new Error('Failed to authenticate with Vecta API');
  }
}

app.post('/transfer', async (req, res) => {
  const { shopGuid, projectGuid } = req.body;
  const winnerApiKey = process.env.WINNER_FLEX_API_KEY;
  
  if (!shopGuid || !projectGuid) {
    return res.status(400).json({ error: 'shopGuid and projectGuid are required' });
  }

  if (!winnerApiKey) {
    return res.status(500).json({ error: 'Winner API key is missing. Please check your .env file.' });
  }

  try {
    // Fetch project data from Winner
    const winnerResponse = await axios.get(`${winnerBaseUrl}/eapi/v1/projects/${projectGuid}`, {
      headers: {
        'apiKey': winnerApiKey,
        'Content-Type': 'application/json',
      },
      params: {
        shopGuid,
      },
    });

    const projectData = winnerResponse.data;

    // Transform project data to match Vecta's schema if necessary
    const transformedData = {
      name: projectData.name,
      description: projectData.description,
      // Add more fields as needed
    };

    // Authenticate with Vecta to get the Bearer token
    const bearerToken = await authenticateVecta();

    // Send project data to Vecta
    const vectaResponse = await axios.post(`${vectaBaseUrl}/projects`, transformedData, {
      headers: {
        'Authorization': `Bearer ${bearerToken}`,
        'X-API-KEY': process.env.VECTA_API_KEY,
        'Content-Type': 'application/json',
      },
    });

    res.status(200).json({ message: 'Project transferred successfully', vectaResponse: vectaResponse.data });
  } catch (error) {
    res.status(500).json({ error: 'Failed to transfer project', details: error.message });
  }
});

app.listen(port, () => {
  console.log(`Server is running on http://localhost:${port}`);
});
